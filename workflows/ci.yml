name: CI Tests

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'lab2/**'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'lab2/**'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [gcc, clang]
        exclude:
          - os: windows-latest
            compiler: clang  # Windows doesn't have clang by default
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgtest-dev
    
    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install googletest
    
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Install vcpkg for Google Test
        git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
        C:\vcpkg\bootstrap-vcpkg.bat
        C:\vcpkg\vcpkg install gtest
    
    - name: Set up compiler (GCC)
      if: matrix.compiler == 'gcc'
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          echo "CXX=g++" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV
        else
          echo "CXX=g++" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV
        fi
    
    - name: Set up compiler (Clang)
      if: matrix.compiler == 'clang'
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
        else
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
        fi
    
    - name: Build main game
      run: |
        cd lab2/game
        make clean
        make CXX=$CXX
    
    - name: Build and run tests
      run: |
        cd lab2/game/tests
        make clean
        make CXX=$CXX
        ./all_tests
    
    - name: Test game executable
      run: |
        cd lab2/game
        echo "help" | timeout 5s ./bin/game || true
    
    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ matrix.os }}-${{ matrix.compiler }}
        path: |
          lab2/game/bin/game
          lab2/game/tests/all_tests
